?person()
today()
Sys.Date()
Sys.Date()
library(usethis)
use_mit_license()
edit_r_profile()
use_mit_license()
use_mit_license(name = "Jed Stephens")
use_r(full_factorial)
use_r("full_factorial")
far::orthonormalization
use_package(far)
use_package("far")
full_factorial <- function(attributes_list){
as_orthogonal_factor <- function(x){
x_factor <- as.factor(x)
nlevels_fct  <- nlevels(x_factor)
# orthogonal coding for x-level factors, see Kuhfeld 2010 (pg. 62, 73)
EC <-cbind(c(rep(1, nlevels_fct)), contr.sum(x_factor))
contrasts(x_factor) <- (far::orthonormalization(EC)*nlevels_fct^(1/2))[,(2:nlevels_fct)]
return(x_factor)
}
#Create the full factorial design.
full_factorial <-expand.grid(lapply(attributes_list, as_orthogonal_factor))
# Add on additional matrixes.
# Add X_main
attr(full_factorial, "X_full") <- model.matrix(as.formula(
paste("", paste(attributes(full_factorial)$names, collapse=" + "), sep=" ~ ")), full_factorial)
# Add attributes_list
attr(full_factorial, "attributes_list") <- attributes_list
return(full_factorial)
}
attrshort  = list(condition = c("1", "2", "3"),
technical =c("1", "2", "3"),
provenance = c("1", "2"))
full_factorial(attrshort)
class(full_factorial(attrshort))
use_r("enhance_full_factorial")
use_r("search_design")
use_package(dyplr)
use_package("dplyr")
use_r("fractional_factorial_efficiency")
